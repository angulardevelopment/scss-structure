// update single style
@each $color in pink, violet, yellow, blue {
    .p_#{$color} {
      background-color: #{$color};
    }
  }
  
  // update multiple style
  @each $color, $border in (aqua, dotted), (red, solid), (green, double) {
    .#{$color} {
      background-color: $color;
      border: $border;
    }
  }

  h2 {
    color: if(1 + 1==3, green, red);
  }
  
  p {
    @if 1+1==2 {
      border: 1px solid;
    }
    @if 5 < 3 {
      border: 2px dotted;
    }
    @if null {
      border: 3px double;
    }
  }
  p {
    @if 1 + 1 == 2 {
      border: 1px solid;
    }
    @if 5 < 3 {
      border: 2px dotted;
    }
    @if null {
      border: 3px double;
    }
  }
  
  $type: monster;
  p {
    @if $type==ocean {
      color: blue;
    } @else if $type==matador {
      color: red;
    } @else if $type==monster {
      color: green;
    } @else {
      color: black;
    }
  }
  
  @for $i from 1 to 4 {
    .p#{$i} {
      padding-left: $i * 10px;
    }
  }

  $colors: (
  lighestGray: #f8f8fa,
  lightGray: #a5acba,
  light: #ffffff,
  dark: #000000,
  link: #428bca,
  linkHover: #555,
  navBlue: #7ac243,
  navGreen: #009cdc,
);

.my-class {
  color: map-get($colors, navBlue);
}
